def TimeCoverter(t):
   t=t[0:10]+' '+t[11:len(t)-1]
#  print t
   return t

######################################################################################################################################################
#Computing time difference
######################################################################################################################################################


count =0
def T_D2(t1,t2):
    new_t3=[]
    t1 = TimeCoverter(t1)
    t2 = TimeCoverter(t2)
    new_t3.append(int(t2[11:13])-int(t1[11:13]))
    new_t3.append(int(t2[14:16])-int(t1[14:16]))
    new_t3.append(int(t2[17:19])-int(t1[17:19]))
    if (new_t3[2] < 0):
        new_t3[2] = new_t3[2] + 60
        new_t3[1] = new_t3[1] - 1
    if (new_t3[1] < 0):
        new_t3[1] = new_t3[1] + 60
        new_t3[0] = new_t3[0] - 1
    if (new_t3[0] < 0):
        new_t3[0] = new_t3[0] + 25
    return new_t3



##########################################################################################################################################################################
#Extracting the port and type of service
############################################################################################################################################################################

def SearchPort(src):
   s=src.rfind(",")
   e=src.index(",")
   return (src[e+1:s])

def SearchService(src):
   s = src.index(",")
   return src[0:s]

#################################################################################################################################################################################
#Convert to an ascii value
##################################################################################################################################################################################

def ConToAscii(a):
   sum=0
   for k in range(0,len(a)):
      d=ord(a[k])
      sum=sum+d
      return sum
#############################################################################################################################################################################
#Split Ip
#############################################################################################################################################################################
def SplitByDotIp(s):
   return map(int,s.split("."))




